(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{406:function(t,e,a){"use strict";a.r(e);var r=a(42),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"autorelease-pool-自动释放池-对象引用计数自动处理器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#autorelease-pool-自动释放池-对象引用计数自动处理器"}},[t._v("#")]),t._v(" Autorelease Pool 自动释放池(对象引用计数自动处理器)")]),t._v(" "),a("p",[t._v("是OC中的一种内存自动回收机制，支持Cocoa的引用计数的内存管理系统的对象。")]),t._v(" "),a("h2",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),a("p",[a("code",[t._v("autorelease")]),t._v("本质上就是延迟调用"),a("code",[t._v("release")]),t._v("。")]),t._v(" "),a("p",[t._v("配合"),a("a",{attrs:{href:"/oc/runloop"}},[t._v("Runloop")])]),t._v(" "),a("div",{staticClass:"language-objc line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-objc"}},[a("code",[t._v("  NSAutoreleasePool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSAutoreleasePool alloc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" init"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  NSString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" nsstring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" cstring "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello CString"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这一行代码就是在给pool发送retain消息了")]),t._v("\n  nsstring "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString stringWithUTF8String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("cstring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pool release"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h2",{attrs:{id:"我个人的看法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我个人的看法"}},[t._v("#")]),t._v(" 我个人的看法")]),t._v(" "),a("p",[t._v("从我工作时，都是"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Automatic_Reference_Counting",target:"_blank",rel:"noopener noreferrer"}},[t._v("ARC"),a("OutboundLink")],1),t._v("/"),a("a",{attrs:{href:"https://docs.swift.org/swift-book/LanguageGuide/AutomaticReferenceCounting.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Swift-ARC"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("仅demo中，为了了解"),a("a",{attrs:{href:"https://zh.wikipedia.org/zh-hans/%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0",target:"_blank",rel:"noopener noreferrer"}},[t._v("MRC"),a("OutboundLink")],1),t._v("会写一些。")]),t._v(" "),a("h2",{attrs:{id:"官方对于-自动释放池-的说法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官方对于-自动释放池-的说法"}},[t._v("#")]),t._v(" 官方对于 自动释放池 的说法")]),t._v(" "),a("h3",{attrs:{id:"_1-apple-nsautoreleasepool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-apple-nsautoreleasepool"}},[t._v("#")]),t._v(" 1. "),a("a",{attrs:{href:"https://developer.apple.com/documentation/foundation/nsautoreleasepool?language=occ",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apple - NSAutoreleasePool"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_2-apple-高级内存管理编程指南-2012-07-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-apple-高级内存管理编程指南-2012-07-17"}},[t._v("#")]),t._v(" 2. "),a("a",{attrs:{href:"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/MemoryMgmt/Articles/MemoryMgmt.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apple - 高级内存管理编程指南"),a("OutboundLink")],1),t._v(" 2012-07-17")]),t._v(" "),a("p",[t._v("应用程序内存管理是在程序运行时分配内存，使用它并在完成后释放它的过程。编写良好的程序将使用尽可能少的内存。在Objective-C中，它也可以看作是在许多数据和代码之间分配有限内存资源所有权的一种方法。完成本指南的工作后，您将拥有显式管理对象生命周期并在不再需要它们时释放它们的知识，从而可以管理应用程序的内存。")]),t._v(" "),a("p",[t._v("尽管通常在单个对象级别上考虑内存管理，但实际上您的目标是管理对象图。您要确保内存中没有超出实际需要的对象。")]),t._v(" "),a("h3",{attrs:{id:"_3-apple-过渡到arc发行说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-apple-过渡到arc发行说明"}},[t._v("#")]),t._v(" 3. "),a("a",{attrs:{href:"https://developer.apple.com/library/archive/releasenotes/ObjectiveC/RN-TransitioningToARC/Introduction/Introduction.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apple - 过渡到ARC发行说明"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/u010856537/article/details/47301691",target:"_blank",rel:"noopener noreferrer"}},[t._v("csdn - iOS 缓存池 对象重复使用"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/yuanmengong886/article/details/52783599",target:"_blank",rel:"noopener noreferrer"}},[t._v("csdn - iOS 自动释放池内存实现"),a("OutboundLink")],1),t._v(" 2016-10-11 00:35:53")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/Tongseng/article/details/52101476",target:"_blank",rel:"noopener noreferrer"}},[t._v("csdn - "),a("code",[t._v("iOS---NSAutoreleasePool自动释放原理及详解")]),a("OutboundLink")],1),t._v(" 2016-08-03 10:53:32")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_30723433/article/details/99760791",target:"_blank",rel:"noopener noreferrer"}},[t._v("csdn - "),a("code",[t._v("Objective-C Autorelease Pool 的实现原理")]),a("OutboundLink")],1),t._v("  2015-06-24 15:03:00")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/u011217834/article/details/89668872",target:"_blank",rel:"noopener noreferrer"}},[t._v("csdn - iOS 自动释放池一个小的面试题引发的简单学习"),a("OutboundLink")],1),t._v("  2019-04-29 09:54:51")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/shihuboke/article/details/73865028",target:"_blank",rel:"noopener noreferrer"}},[t._v("csdn - "),a("code",[t._v("iOS 运行循环-RunLoop 和 自动释放池-autoreleasepoo 笔记")]),a("OutboundLink")],1),t._v(" 2017-06-28 23:16:35")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/u012265444/article/details/106085672",target:"_blank",rel:"noopener noreferrer"}},[t._v("csdn - ~推荐看~ "),a("code",[t._v("iOS AutoreleasePool（自动释放池子）的原理和实现")]),a("OutboundLink")],1),t._v(" 2020-05-12 23:09:06 "),a("b",[t._v("推荐看")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/tiantian1980/article/details/8715344",target:"_blank",rel:"noopener noreferrer"}},[t._v("csdn - "),a("code",[t._v("ios自动释放池（autoreleasepool）")]),a("OutboundLink")],1),t._v("  2013-03-25 09:18:57")])])])}),[],!1,null,null,null);e.default=n.exports}}]);